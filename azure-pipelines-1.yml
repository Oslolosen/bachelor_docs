trigger:
  - tull

pool:
  vmImage: ubuntu-latest

strategy:
  matrix:
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies' 

- script: |
    git config --global user.email "pipeline@azure.com"
    git config --global user.name "Pipeline"
    git config --global credential.helper store
    git config --global http.extraheader "AUTHORIZATION: basic $(echo -n git:$(GIT_TOKEN) | base64)"

<<<<<<< HEAD
    git switch dev                
    git pull origin dev --rebase            
=======
    git checkout dev
    git pull

>>>>>>> 65e1d01efb877b103e3988dddb490983eb99e56e
  env:
    GIT_TOKEN: $(GIT_TOKEN)
  displayName: 'Authorization, switch branch and pull'

- script: |
    sphinx-apidoc -o sphinx_test/docs sphinx_test/src    
  displayName: 'Parse comments to REST files'

- script: |
    cd sphinx_test/docs
    make clean
    make html
    pwd
  displayName: 'Generate HTML documents'

<<<<<<< HEAD
- script: |  

    git add --all
    git commit -m "New edits in repo [skip ci]"
    git push origin dev
  env:
    GIT_TOKEN: $(GIT_TOKEN)
  displayName: 'Commit and Push changes to dev branch'

- script: |
    git fetch --all
=======
- script: |
    git fetch origin
    git branch --list dev || git checkout -b dev origin/dev
    git add --all
    git commit -m "New edits in repo [skip ci]"
    git push origin dev  

  displayName: 'Commit and Push changes to dev branch'

- script: |
    git fetch 
>>>>>>> 65e1d01efb877b103e3988dddb490983eb99e56e
    git checkout main
    git pull origin main --rebase  
    git merge dev -m "Merging changes from dev to main [skip ci]"
    git push origin main
  displayName: 'Merge dev into main and push'
